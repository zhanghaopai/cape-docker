name: Build and Release CAPE Docker Project

on:
  watch:
    types: started
  push:
    tags:
      - 'v*'  # This assumes that you use semantic versioning

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: true  # Ensures submodules are fetched

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '^1.16'  # Specify your Go version

    - name: Set up Docker Environment
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image and split into volumes
      run: |
        docker build -t cape:${{ github.sha }} .
        docker save cape:${{ github.sha }} | gzip | split -b 1G - cape-docker-image.tar.gz.
        ls -la cape-docker-image.tar.gz.*

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v0.99.1
        release_name: Release v0.99.1
        body: |
          This release Docker images:
          - `cape-docker-image.tar.gz.*`: Docker image archive (split into 1GB parts). Join with `cat cape-docker-image.tar.gz.* | docker load`
        draft: false
        prerelease: false

    - name: Upload Docker Image Parts to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./cape-docker-image.tar.gz.aa
        asset_name: cape-docker-image.tar.gz.aa
        asset_content_type: application/gzip
      if: steps.create_release.outcome == 'success' && hashFiles('cape-docker-image.tar.gz.aa') != ''

    - name: Upload additional Docker Image part .ab
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./cape-docker-image.tar.gz.ab
        asset_name: cape-docker-image.tar.gz.ab
        asset_content_type: application/gzip
      if: steps.create_release.outcome == 'success' && hashFiles('cape-docker-image.tar.gz.ab') != ''

    - name: Upload additional Docker Image part .ac
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./cape-docker-image.tar.gz.ac
        asset_name: cape-docker-image.tar.gz.ac
        asset_content_type: application/gzip
      if: steps.create_release.outcome == 'success' && hashFiles('cape-docker-image.tar.gz.ac') != ''
