name: Build and Release CAPE Docker Project

on:
  watch:
    types: started
  push:
    tags:
      - 'v*'  # This assumes that you use semantic versioning

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: true  # Ensures submodules are fetched

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '^1.16'  # Specify your Go version

    - name: Build project binaries
      run: make all

    - name: Set up Docker Environment
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image
      run: |
        docker tag cape:base celyrin/cape:base
        docker tag cape:base celyrin/cape:${{ github.sha }}
        docker push celyrin/cape:base
        docker push celyrin/cape:${{ github.sha }}

    - name: Package Binaries
      run: tar -czvf bin.tar.gz bin

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |  # Updated release description here
          This release contains the following files:
          - `cape-docker.tar.gz`: Docker image of the latest build. Use `gunzip -c cape-docker.tar.gz | docker load` to load this image into your Docker environment.
          - `bin.tar.gz`: Archive of the binaries.
        draft: false
        prerelease: false

    - name: Upload Binaries Archive to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin.tar.gz
        asset_name: bin.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload Docker Image to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./cape-docker.tar.gz
        asset_name: cape-docker.tar.gz
        asset_content_type: application/octet-stream
        
